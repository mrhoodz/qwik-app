import {
  $,
  component$,
  useClientEffect$,
  useOnWindow,
  useSignal,
  useStylesScoped$,
} from "@builder.io/qwik";
import styles from "./header.scss?inline";
import "../../styles/_displaybreak.scss";
// import { Link } from "@builder.io/qwik-city";
// import { Link } from "@builder.io/qwik-city";
// import { Motion } from "~/integrations/react/motion";

export default component$(() => {
  useStylesScoped$(styles);

  // const store: any = useStore({
  //   scroll: 0,
  // });

  const scroll: any = useSignal(0);
  const menuSig: any = useSignal(false);
  // const windowWidth: any = useSignal(1920);
  const clientHeight: any = useSignal(0);
  const urlHash = useSignal("#Home");

  useClientEffect$(
    () => {
      // console.log(location.pathname);
      urlHash.value = location.pathname;
      // urlHash.value = useSignal(location.hash);

      clientHeight.value =
        document.documentElement.scrollHeight -
        document.documentElement.clientHeight;

      scroll.value = window.scrollY / clientHeight.value;
    },
    { eagerness: "load" }
  );

  useOnWindow(
    "scroll",
    $(() => {
      // console.log("lm scrolling at + " + window.scrollY);
      // console$.log(scroll.value);
      clientHeight.value =
        document.documentElement.scrollHeight -
        document.documentElement.clientHeight;

      scroll.value = window.scrollY / clientHeight.value;
    })
  );

  // useClientEffect$(
  //   () => {
  //     onresize = $(() => {
  //       if (document.documentElement.clientWidth > 600) {
  //         menuSig.value = false;
  //       }

  //       windowWidth.value = document.documentElement.clientWidth;
  //       console$.log(document.documentElement.clientWidth);
  //     });

  //     onscroll = $(() => {
  //       // console$.log(scroll.value);
  //       clientHeight.value =
  //         document.documentElement.scrollHeight -
  //         document.documentElement.clientHeight;

  //       scroll.value = window.scrollY / clientHeight.value;
  //     });
  //   },
  //   { eagerness: "load" }
  // );

  // create a tenary operator to check if the menu is open or closed
  // if the menu is open, then the menu should be visible
  // if the menu is closed, then the menu should be hidden

  // tenary operator
  // if (menuSig) {
  //   // menu is open
  //   // menu should be visible
  // } else {
  //   // menu is closed
  //   // menu should be hidden
  // }

  const Links = [
    {
      title: "Home",
      link: "/",
    },

    {
      title: "Goals",
      link: "/#Goals",
    },
    {
      title: "Projects",
      link: "/#Projects",
    },
    {
      title: "Focus",
      link: "/#Focus",
    },
  ];

  // console.log(Links[0].link);

  return (
    <>
      <header>
        <span
          style={{ transform: `scaleX(${scroll.value})` }}
          id="nav-progress"
        ></span>

        <a style={{ fontSize: "1px" }} href="/">
          Realwebsdigital Logo
          <div class="logoArea ">
            <svg
              id="logoPng"
              xmlns="http://www.w3.org/2000/svg"
              width="77.537"
              height="67.798"
              viewBox="0 0 77.537 67.798"
            >
              <g transform="translate(0 22.1)">
                <path
                  d="M159.377,58.787V45.3H138.4V71.9a5.618,5.618,0,0,1-11.237,0V56.835a19.512,19.512,0,0,1-13.485,0V71.9a5.618,5.618,0,0,1-11.237,0V45.3H81.84V58.787h7.117V71.9a19.089,19.089,0,0,0,31.465,14.548A19.089,19.089,0,0,0,151.886,71.9V58.787Z"
                  transform="translate(-81.84 -45.302)"
                  fill="#fff"
                />
              </g>
              <path
                d="M102.146,45.3c.094.255.191.5.3.749V45.3Z"
                transform="translate(-81.84 -23.202)"
              />
              <path
                d="M138.7,45.3h-.3v.749C138.506,45.8,138.6,45.557,138.7,45.3Z"
                transform="translate(-81.84 -23.202)"
              />
              <path
                d="M135.779,38.56a15.354,15.354,0,1,0-8.615,13.8A15.359,15.359,0,0,0,135.779,38.56Z"
                transform="translate(-81.84 -23.202)"
                fill="#fff"
              />
              <g transform="translate(34.817 9.288)">
                <path
                  d="M126.342,45.006v.137h-2.519L120.4,40.359h-1.522v4.784h-2.226V32.49h4.178a6.289,6.289,0,0,1,2.626.488,3.6,3.6,0,0,1,1.6,1.347,3.689,3.689,0,0,1,.536,1.992,3.745,3.745,0,0,1-2.87,3.768Zm-7.459-6.4h1.679a3.213,3.213,0,0,0,2.031-.556,1.978,1.978,0,0,0,.7-1.65,1.89,1.89,0,0,0-.634-1.542,2.818,2.818,0,0,0-1.845-.528h-1.933Z"
                  transform="translate(-116.657 -32.49)"
                />
              </g>
            </svg>{" "}
            {/* <img
              id="logoText"
              class="desktop"
              src="logos/logoText.svg"
              alt="logoText"
            /> */}
            <svg
              id="logoText"
              class="desktop"
              xmlns="http://www.w3.org/2000/svg"
              width="328.656"
              height="43.337"
              viewBox="0 0 328.656 43.337"
            >
              <path
                d="M17.589,0,11.275-11.152H8.569V0H2.829V-28.618H13.571a12.543,12.543,0,0,1,5.658,1.168,8.163,8.163,0,0,1,3.506,3.157A8.616,8.616,0,0,1,23.9-19.844a8.521,8.521,0,0,1-1.64,5.1A8.425,8.425,0,0,1,17.384-11.6L24.231,0ZM8.569-15.457h4.8a4.793,4.793,0,0,0,3.485-1.127A4.2,4.2,0,0,0,18-19.721a4,4,0,0,0-1.148-3.055,4.908,4.908,0,0,0-3.485-1.087h-4.8Zm41.656,3.608a13.547,13.547,0,0,1-.164,2.214H33.456a5.647,5.647,0,0,0,1.722,3.854,5.31,5.31,0,0,0,3.731,1.394A4.687,4.687,0,0,0,43.46-7.134h6.191a10.346,10.346,0,0,1-3.772,5.392A11.012,11.012,0,0,1,39.032.369a11.849,11.849,0,0,1-5.884-1.456A10.245,10.245,0,0,1,29.09-5.207a12.625,12.625,0,0,1-1.455-6.15,12.861,12.861,0,0,1,1.435-6.191,10.013,10.013,0,0,1,4.018-4.1,12.037,12.037,0,0,1,5.945-1.435,11.942,11.942,0,0,1,5.8,1.394,9.811,9.811,0,0,1,3.977,3.956A11.973,11.973,0,0,1,50.225-11.849Zm-5.945-1.64a4.552,4.552,0,0,0-1.6-3.547,5.665,5.665,0,0,0-3.813-1.332,5.21,5.21,0,0,0-3.587,1.291A5.678,5.678,0,0,0,33.5-13.489Zm8.651,2.05A13.146,13.146,0,0,1,54.3-17.548a10.067,10.067,0,0,1,3.731-4.1A9.933,9.933,0,0,1,63.3-23.083a9.255,9.255,0,0,1,4.448,1.025,9.027,9.027,0,0,1,3.055,2.583v-3.239h5.781V0H70.807V-3.321A8.538,8.538,0,0,1,67.753-.677,9.346,9.346,0,0,1,63.263.369a9.653,9.653,0,0,1-5.228-1.476A10.33,10.33,0,0,1,54.3-5.268,13.365,13.365,0,0,1,52.931-11.439Zm17.876.082a7.362,7.362,0,0,0-.82-3.588,5.781,5.781,0,0,0-2.214-2.3,5.917,5.917,0,0,0-2.993-.8,5.813,5.813,0,0,0-2.952.779,5.866,5.866,0,0,0-2.194,2.276,7.128,7.128,0,0,0-.84,3.547,7.363,7.363,0,0,0,.84,3.587,6.051,6.051,0,0,0,2.214,2.358,5.624,5.624,0,0,0,2.932.82,5.917,5.917,0,0,0,2.993-.8,5.781,5.781,0,0,0,2.214-2.3A7.362,7.362,0,0,0,70.807-11.357ZM87.945-30.34V0h-5.74V-30.34Zm37.146,7.626L118.449,0h-6.191l-4.141-15.867L103.976,0H97.744L91.061-22.714h5.822l4.018,17.3,4.346-17.3h6.068l4.264,17.261L119.6-22.714Zm24.231,10.865a13.547,13.547,0,0,1-.164,2.214h-16.6a5.647,5.647,0,0,0,1.722,3.854,5.31,5.31,0,0,0,3.731,1.394,4.687,4.687,0,0,0,4.551-2.747h6.191a10.347,10.347,0,0,1-3.772,5.392A11.012,11.012,0,0,1,138.129.369a11.849,11.849,0,0,1-5.883-1.456,10.244,10.244,0,0,1-4.059-4.121,12.625,12.625,0,0,1-1.456-6.15,12.861,12.861,0,0,1,1.435-6.191,10.013,10.013,0,0,1,4.018-4.1,12.037,12.037,0,0,1,5.945-1.435,11.942,11.942,0,0,1,5.8,1.394,9.811,9.811,0,0,1,3.977,3.956A11.973,11.973,0,0,1,149.322-11.849Zm-5.945-1.64a4.552,4.552,0,0,0-1.6-3.547,5.665,5.665,0,0,0-3.813-1.332,5.21,5.21,0,0,0-3.588,1.291,5.679,5.679,0,0,0-1.783,3.588Zm15.867-5.9a8.208,8.208,0,0,1,3.055-2.665,9.408,9.408,0,0,1,4.449-1.025,9.933,9.933,0,0,1,5.268,1.435,10.1,10.1,0,0,1,3.731,4.08,13.114,13.114,0,0,1,1.374,6.13,13.365,13.365,0,0,1-1.374,6.171,10.33,10.33,0,0,1-3.731,4.161A9.725,9.725,0,0,1,166.747.369a9.409,9.409,0,0,1-4.449-1,8.641,8.641,0,0,1-3.055-2.6V0H153.5V-30.34h5.74Zm12.013,7.954a7.128,7.128,0,0,0-.84-3.547,5.819,5.819,0,0,0-2.214-2.276,5.925,5.925,0,0,0-2.972-.779,5.733,5.733,0,0,0-2.932.8,5.934,5.934,0,0,0-2.214,2.316,7.245,7.245,0,0,0-.84,3.567,7.245,7.245,0,0,0,.84,3.567A5.934,5.934,0,0,0,162.3-5.474a5.733,5.733,0,0,0,2.932.8,5.7,5.7,0,0,0,2.972-.82,6.087,6.087,0,0,0,2.214-2.337A7.334,7.334,0,0,0,171.257-11.439ZM189.994.369a11.977,11.977,0,0,1-5-1,8.839,8.839,0,0,1-3.505-2.726,6.91,6.91,0,0,1-1.415-3.813h5.781A3.149,3.149,0,0,0,187.145-5a4.492,4.492,0,0,0,2.809.861,4.361,4.361,0,0,0,2.563-.656,1.986,1.986,0,0,0,.923-1.681,1.772,1.772,0,0,0-1.128-1.661,21.216,21.216,0,0,0-3.587-1.21,30.4,30.4,0,0,1-4.161-1.271,7.225,7.225,0,0,1-2.788-2.009,5.392,5.392,0,0,1-1.169-3.649,5.888,5.888,0,0,1,1.087-3.444,7.3,7.3,0,0,1,3.116-2.46,11.681,11.681,0,0,1,4.777-.9,9.753,9.753,0,0,1,6.478,2.029,7.519,7.519,0,0,1,2.665,5.474h-5.494a2.974,2.974,0,0,0-1.127-2.153,4.19,4.19,0,0,0-2.686-.8,4.231,4.231,0,0,0-2.4.574,1.83,1.83,0,0,0-.841,1.6,1.879,1.879,0,0,0,1.148,1.743,17.827,17.827,0,0,0,3.567,1.21,30.277,30.277,0,0,1,4.059,1.271,7.171,7.171,0,0,1,2.768,2.029,5.573,5.573,0,0,1,1.21,3.629,6.017,6.017,0,0,1-1.087,3.526,7.157,7.157,0,0,1-3.116,2.44A11.806,11.806,0,0,1,189.994.369Zm12.177-11.808a13.146,13.146,0,0,1,1.374-6.109,10.019,10.019,0,0,1,3.751-4.1,10.039,10.039,0,0,1,5.289-1.435,9.647,9.647,0,0,1,4.223.964,8.443,8.443,0,0,1,3.2,2.562V-30.34h5.822V0h-5.822V-3.362a7.779,7.779,0,0,1-2.993,2.706A9.376,9.376,0,0,1,212.544.369,9.756,9.756,0,0,1,207.3-1.107a10.278,10.278,0,0,1-3.751-4.161A13.365,13.365,0,0,1,202.171-11.439Zm17.876.082a7.362,7.362,0,0,0-.82-3.588,5.781,5.781,0,0,0-2.214-2.3,5.917,5.917,0,0,0-2.993-.8,5.813,5.813,0,0,0-2.952.779,5.866,5.866,0,0,0-2.193,2.276,7.128,7.128,0,0,0-.84,3.547,7.363,7.363,0,0,0,.84,3.587,6.051,6.051,0,0,0,2.214,2.358,5.624,5.624,0,0,0,2.931.82,5.917,5.917,0,0,0,2.993-.8,5.781,5.781,0,0,0,2.214-2.3A7.362,7.362,0,0,0,220.047-11.357ZM234.356-25.42a3.5,3.5,0,0,1-2.521-.964,3.188,3.188,0,0,1-1-2.4,3.188,3.188,0,0,1,1-2.4,3.5,3.5,0,0,1,2.521-.964,3.5,3.5,0,0,1,2.521.964,3.188,3.188,0,0,1,1,2.4,3.188,3.188,0,0,1-1,2.4A3.5,3.5,0,0,1,234.356-25.42Zm2.829,2.706V0h-5.74V-22.714Zm14.555-.369a9.533,9.533,0,0,1,4.469,1,8.228,8.228,0,0,1,3.034,2.6v-3.239h5.781V.164A12.186,12.186,0,0,1,263.753,5.8a9.436,9.436,0,0,1-3.813,3.936,12.189,12.189,0,0,1-6.15,1.455,13.137,13.137,0,0,1-7.934-2.255,8.359,8.359,0,0,1-3.505-6.15h5.7A4.243,4.243,0,0,0,250,5.268a6.785,6.785,0,0,0,3.628.923,5.615,5.615,0,0,0,4.059-1.5A6.01,6.01,0,0,0,259.243.164V-3.362A8.72,8.72,0,0,1,256.189-.7,9.113,9.113,0,0,1,251.74.369a9.756,9.756,0,0,1-5.248-1.476,10.278,10.278,0,0,1-3.751-4.161,13.365,13.365,0,0,1-1.374-6.171,13.146,13.146,0,0,1,1.374-6.109,10.067,10.067,0,0,1,3.731-4.1A9.933,9.933,0,0,1,251.74-23.083Zm7.5,11.726a7.363,7.363,0,0,0-.82-3.588,5.781,5.781,0,0,0-2.214-2.3,5.917,5.917,0,0,0-2.993-.8,5.813,5.813,0,0,0-2.952.779,5.866,5.866,0,0,0-2.193,2.276,7.128,7.128,0,0,0-.84,3.547,7.363,7.363,0,0,0,.84,3.587,6.051,6.051,0,0,0,2.214,2.358,5.624,5.624,0,0,0,2.931.82,5.917,5.917,0,0,0,2.993-.8,5.781,5.781,0,0,0,2.214-2.3A7.363,7.363,0,0,0,259.243-11.357ZM273.552-25.42a3.5,3.5,0,0,1-2.521-.964,3.188,3.188,0,0,1-1-2.4,3.188,3.188,0,0,1,1-2.4,3.5,3.5,0,0,1,2.521-.964,3.5,3.5,0,0,1,2.522.964,3.188,3.188,0,0,1,1,2.4,3.188,3.188,0,0,1-1,2.4A3.5,3.5,0,0,1,273.552-25.42Zm2.829,2.706V0h-5.74V-22.714ZM288.722-18V-7.011a2.172,2.172,0,0,0,.553,1.661,2.719,2.719,0,0,0,1.866.512h2.665V0H290.2q-7.257,0-7.257-7.052V-18h-2.706v-4.715h2.706v-5.617h5.781v5.617h5.084V-18Zm7.749,6.56a13.146,13.146,0,0,1,1.374-6.109,10.067,10.067,0,0,1,3.731-4.1,9.933,9.933,0,0,1,5.269-1.435,9.255,9.255,0,0,1,4.448,1.025,9.027,9.027,0,0,1,3.055,2.583v-3.239h5.781V0h-5.781V-3.321a8.538,8.538,0,0,1-3.055,2.645A9.346,9.346,0,0,1,306.8.369a9.653,9.653,0,0,1-5.228-1.476,10.33,10.33,0,0,1-3.731-4.161A13.364,13.364,0,0,1,296.471-11.439Zm17.876.082a7.363,7.363,0,0,0-.82-3.588,5.781,5.781,0,0,0-2.214-2.3,5.917,5.917,0,0,0-2.993-.8,5.813,5.813,0,0,0-2.952.779,5.866,5.866,0,0,0-2.194,2.276,7.128,7.128,0,0,0-.84,3.547,7.363,7.363,0,0,0,.84,3.587,6.051,6.051,0,0,0,2.214,2.358,5.624,5.624,0,0,0,2.931.82,5.917,5.917,0,0,0,2.993-.8,5.781,5.781,0,0,0,2.214-2.3A7.363,7.363,0,0,0,314.347-11.357ZM331.485-30.34V0h-5.74V-30.34Z"
                transform="translate(-2.829 32.144)"
                fill="#d1ede4"
              />
            </svg>
          </div>
        </a>

        <nav class="navLinks desktop">
          {
            urlHash.value == "/" ? (
              <>
                {Links.map((item) => (
                  <span
                    key={Math.random()}
                    onClick$={() => {
                      menuSig.value = false;

                      document.getElementById(item.title)?.scrollIntoView(true);
                    }}
                    // href="/#Projects"
                    class="link"
                  >
                    {item.title}
                  </span>
                ))}
              </>
            ) : (
              <>
                {Links.map((item) => (
                  <a
                    key={Math.random()}
                    onClick$={() => {
                      menuSig.value = false;

                      document.getElementById(item.link)?.scrollIntoView(true);
                    }}
                    href={item.link}
                    class="link"
                  >
                    {item.title}
                  </a>
                ))}
              </>
            )

            // <>
            //   {Links.map((item) => (
            //     <span
            //       key={Math.random()}
            //       onClick$={() => {
            //         menuSig.value = false;

            //         document.getElementById(item.link)?.scrollIntoView(true);
            //       }}
            //       // href="/#Projects"
            //       class="link"
            //     >
            //       {item.title}
            //     </span>
            //   ))}
            // </>
          }
        </nav>

        <span class="switch desktop">
          <a href="/" class="switch-A">
            Portfoilo
          </a>
          <a href="/blog" class="switch-B">
            {" "}
            Blog{" "}
          </a>
        </span>

        <section
          class="side-analysis mobile"
          style={{ display: menuSig.value == false ? "none" : "block" }}
        >
          <div class="top">
            {/* <img id="logoPng" src="/logos/logoPng.svg" alt="logoPng" /> */}
            <svg
              id="logoPng"
              xmlns="http://www.w3.org/2000/svg"
              width="77.537"
              height="67.798"
              viewBox="0 0 77.537 67.798"
            >
              <g transform="translate(0 22.1)">
                <path
                  d="M159.377,58.787V45.3H138.4V71.9a5.618,5.618,0,0,1-11.237,0V56.835a19.512,19.512,0,0,1-13.485,0V71.9a5.618,5.618,0,0,1-11.237,0V45.3H81.84V58.787h7.117V71.9a19.089,19.089,0,0,0,31.465,14.548A19.089,19.089,0,0,0,151.886,71.9V58.787Z"
                  transform="translate(-81.84 -45.302)"
                  fill="#fff"
                />
              </g>
              <path
                d="M102.146,45.3c.094.255.191.5.3.749V45.3Z"
                transform="translate(-81.84 -23.202)"
              />
              <path
                d="M138.7,45.3h-.3v.749C138.506,45.8,138.6,45.557,138.7,45.3Z"
                transform="translate(-81.84 -23.202)"
              />
              <path
                d="M135.779,38.56a15.354,15.354,0,1,0-8.615,13.8A15.359,15.359,0,0,0,135.779,38.56Z"
                transform="translate(-81.84 -23.202)"
                fill="#fff"
              />
              <g transform="translate(34.817 9.288)">
                <path
                  d="M126.342,45.006v.137h-2.519L120.4,40.359h-1.522v4.784h-2.226V32.49h4.178a6.289,6.289,0,0,1,2.626.488,3.6,3.6,0,0,1,1.6,1.347,3.689,3.689,0,0,1,.536,1.992,3.745,3.745,0,0,1-2.87,3.768Zm-7.459-6.4h1.679a3.213,3.213,0,0,0,2.031-.556,1.978,1.978,0,0,0,.7-1.65,1.89,1.89,0,0,0-.634-1.542,2.818,2.818,0,0,0-1.845-.528h-1.933Z"
                  transform="translate(-116.657 -32.49)"
                />
              </g>
            </svg>{" "}
            <div
              class="circle"
              onClick$={() => {
                menuSig.value = false;
              }}
            >
              {" "}
              {/* <img class="close-icon" src="svg/Icon ionic-ios-close.svg" alt="close-icon" /> */}
              <svg
                class="close-icon"
                xmlns="http://www.w3.org/2000/svg"
                width="22.867"
                height="22.861"
                viewBox="0 0 22.867 22.861"
              >
                <path
                  d="M25.428,22.719,33.6,14.552a1.914,1.914,0,1,0-2.706-2.706l-8.167,8.167-8.167-8.167a1.914,1.914,0,1,0-2.706,2.706l8.167,8.167-8.167,8.167a1.914,1.914,0,1,0,2.706,2.706l8.167-8.167,8.167,8.167A1.914,1.914,0,1,0,33.6,30.887Z"
                  transform="translate(-11.285 -11.289)"
                  fill="#edd8d8"
                />
              </svg>
            </div>
          </div>
          <nav class="navLinks desktop-only">
            {urlHash.value == "/" ? (
              <>
                {Links.map((item) => (
                  <span
                    key={Math.random()}
                    onClick$={() => {
                      menuSig.value = false;

                      document.getElementById(item.title)?.scrollIntoView(true);
                    }}
                    // href="/#Projects"
                    class="link"
                  >
                    {item.title}
                  </span>
                ))}
              </>
            ) : (
              <>
                {Links.map((item) => (
                  <a
                    key={Math.random()}
                    onClick$={() => {
                      menuSig.value = false;

                      document.getElementById(item.link)?.scrollIntoView(true);
                    }}
                    href={item.link}
                    class="link"
                  >
                    {item.title}
                  </a>
                ))}
              </>
            )}

            <span class="switch">
              <a href="/" class="switch-A">
                Portfoilo
              </a>
              <a href="/blog" class="switch-B">
                {" "}
                Blog{" "}
              </a>
            </span>
          </nav>
        </section>

        <aside
          class="menu mobile"
          onClick$={() => {
            // menuEvent(menuSig)
            if (menuSig.value == false) {
              // menuEvent(menuSig)
              menuSig.value = true;
            } else {
              menuSig.value = false;
            }
          }}
        >
          {/* <span style={{ transform: `scaleX(${store.scroll})` }}></span> */}
          <span></span>

          <span></span>
          <span></span>
        </aside>
      </header>
    </>
  );
});

export const menuEvent = (sig: any, win: any) => {
  if (sig.value == false && win > 600) {
    sig.value = true;
  } else {
    sig.value = false;
  }
};

export const console$ = {
  log: (data: any) => {
    console.log(data);
  },
};
